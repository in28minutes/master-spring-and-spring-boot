# Spring: server.port=8081
quarkus.http.port=8081
# Spring: management.endpoints.web.exposure.include=*
# quarkus.smallrye-health.root-path=/health
# quarkus.smallrye-health.ui.enable=true

# Spring: spring.datasource.url=jdbc:h2:mem:testdb
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb

# Spring: spring.h2.console.enabled=true
quarkus.h2.console.enable=true
quarkus.h2.console.path=/h2-console

# Spring: spring.jpa.defer-datasource-initialization=true
# In Quarkus, this is handled differently with import.sql or Flyway/Liquibase
# In Spring Boot, spring.jpa.defer-datasource-initialization=true ensures that schema creation happens before data loading (e.g., data.sql runs after schema.sql).
# In Quarkus, you can use import.sql for the same purpose:
quarkus.hibernate-orm.sql-load-script=import.sql
# Ensures the database schema is created or updated before data is initialized.
quarkus.hibernate-orm.database.generation=update

# Spring: spring.jpa.show-sql=true
quarkus.hibernate-orm.log.sql=true
dev.quarkus.datasource.dev-ui.allow-sql=true

# Uncomment below properties for Basic Authentication + Security Enabled

# quarkus.http.auth.basic=true
# quarkus.http.auth.policy.admin-policy.roles-allowed=admin

# Enable authentication for the below-mentioned paths
# quarkus.http.auth.permission.admin-permission.paths=/users*,/jpa/users*
# quarkus.http.auth.permission.admin-permission.policy=admin-policy
# quarkus.security.users.embedded.enabled=true
# quarkus.security.users.embedded.plain-text=true
# quarkus.security.users.embedded.users.in28minutes=dummy
# quarkus.security.users.embedded.roles.in28minutes=admin,user